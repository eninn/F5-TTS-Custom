hydra:
  run:
    dir: ckpts/${model.name}_${model.mel_spec.mel_spec_type}_${model.tokenizer}_${datasets.name}/${now:%Y-%m-%d}/${now:%H-%M-%S}

datasets:
  name: f5tts_zzal_v1  # dataset name
  train_paths: 
    # - /mnt/data/dataset/audio_text/libriTTS/train/wavs
    - /mnt/data/dataset/audio_text/aihub015/train/wavs
    # - /mnt/data/dataset/audio_text/aihub131/train/wavs
    - /mnt/data/dataset/audio_text/aihub133/train/wavs
    # - /mnt/data/dataset/audio_text/aihub138/train/wavs
  valid_paths:
    - /mnt/data/dataset/audio_text/libriTTS/valid/wavs
    - /mnt/data/dataset/audio_text/aihub015/valid/wavs
    - /mnt/data/dataset/audio_text/aihub131/valid/wavs
    - /mnt/data/dataset/audio_text/aihub133/valid/wavs
    - /mnt/data/dataset/audio_text/aihub138/valid/wavs
  train_metadatas: 
    # - /mnt/data/dataset/audio_text/libriTTS/metadata_train.txt
    - /mnt/data/dataset/audio_text/aihub015/metadata_train.txt
    # - /mnt/data/dataset/audio_text/aihub131/metadata_train.txt
    - /mnt/data/dataset/audio_text/aihub133/metadata_train.txt
    # - /mnt/data/dataset/audio_text/aihub138/metadata_train.txt
  valid_metadatas:
    - /mnt/data/dataset/audio_text/libriTTS/metadata_valid.txt
    - /mnt/data/dataset/audio_text/aihub015/metadata_valid.txt
    - /mnt/data/dataset/audio_text/aihub131/metadata_valid.txt
    - /mnt/data/dataset/audio_text/aihub133/metadata_valid.txt
    - /mnt/data/dataset/audio_text/aihub138/metadata_valid.txt
  batch_size_per_gpu: 38400  # 8 GPUs, 8 * 38400 = 307200 / rtx4090 batch:free MiB = 6400:581, 7200:OOM, 8000:2473->OOM, 8400:391->75, 10000:2021->OOM, 12000:OOM
  batch_size_type: frame  # frame | sample
  max_samples: 3  # max sequences per batch if use frame-wise batch_size. we set 32 for small models, 64 for base models
  num_workers: 16

optim:
  epochs: 10
  learning_rate: 7.5e-5
  num_warmup_updates: 50000  # warmup updates
  grad_accumulation_steps: 1  # note: updates = steps / grad_accumulation_steps
  max_grad_norm: 1.0  # gradient clipping
  bnb_optimizer: False  # use bnb 8bit AdamW optimizer or not

model:
  name: F5TTS_zzal_v1.2  # model name F5TTS_zzal_v1->batchsize가 작아서 수정.
  tokenizer: char  # tokenizer type "pinyin" do g2p for only chinese characters, need .txt vocab_file | "char" for char-wise tokenizer, need .txt vocab_file
  tokenizer_path: data/${datasets.name}/new_vocab.txt  # if 'custom' tokenizer, define the path want to use (should be vocab.txt)
  backbone: DiT
  arch:
    dim: 1024
    depth: 22
    heads: 16
    ff_mult: 2
    text_dim: 512
    text_mask_padding: True
    qk_norm: null  # null | rms_norm
    conv_layers: 4
    pe_attn_head: null
    checkpoint_activations: False  # recompute activations and save memory for extra compute
  mel_spec:
    target_sample_rate: 24000
    n_mel_channels: 100
    hop_length: 256
    win_length: 1024
    n_fft: 1024
    mel_spec_type: vocos  # vocos | bigvgan
  vocoder:
    is_local: False  # use local offline ckpt or not
    local_path: null  # local vocoder path

ckpts:
  logger: tensorboard  # wandb | tensorboard | null
  log_samples: True  # infer random sample per save checkpoint. wip, normal to fail with extra long samples
  save_per_updates: 100000  # save checkpoint per updates
  keep_last_n_checkpoints: -1  # -1 to keep all, 0 to not save intermediate, > 0 to keep last N checkpoints
  last_per_updates: 10000  # save last checkpoint per updates
  save_dir: ckpts/${model.name}_${model.mel_spec.mel_spec_type}_${model.tokenizer}_${datasets.name}